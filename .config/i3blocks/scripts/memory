#!/bin/bash

# First argument is source (mem/swap), second is output value
# Check /proc/meminfo for possible instances

[ "$BLOCK_BUTTON" = "1" ] && setsid $TERMINAL -e popmemory

INSTANCE="${BLOCK_INSTANCE:-mem;free}"

SOURCE=$(echo "${INSTANCE}" | awk -F ';' '{print $1}')
DISPLAY=$(echo "${INSTANCE}" | awk -F ';' '{print $2}')

if [[ "${SOURCE}" = "mem" ]]; then
  #URGENT_VALUE=90
  URGENT_VALUE=99
elif [[ "${SOURCE}" = "swap" ]]; then
  URGENT_VALUE=50
fi

if [[ "${DISPLAY}" = "" ]]; then
  DISPLAY="free"
fi
DISPLAY="custom"

ONE_KB=1024
ONE_MB=$(echo "${ONE_KB}*1024" | bc -l)
ONE_GB=$(echo "${ONE_MB}*1024" | bc -l)
ONE_TB=$(echo "${ONE_GB}*1024" | bc -l)

dataUnitConverter(){
    data=$1
    data=$(echo "${data}*${ONE_KB}" | bc -l)

    if [[ "${data}" -ge "${ONE_TB}" ]]; then
        #data=$(echo "scale=3;${data}/${ONE_TB}" | bc -l)"T"
        data=$(echo "scale=1;${data}/${ONE_TB}" | bc -l)"T"
    elif [[ "${data}" -ge "${ONE_GB}" ]]; then
        #data=$(echo "scale=2;${data}/${ONE_GB}" | bc -l)"G"
        data=$(echo "scale=1;${data}/${ONE_GB}" | bc -l)"G"
    elif [[ "${data}" -ge "${ONE_MB}" ]]; then
        data=$(echo "scale=1;${data}/${ONE_MB}" | bc -l)"M"
    else
        data=$(echo "scale=0;${data}/${ONE_KB}" | bc -l)"K"
    fi

    echo $data
}

# Grep the value and remove KB so we can calculate with it later
#MEMINFO=$(cat /proc/meminfo | grep "${INSTANCE}" | awk -F ':' '{print $2}' | tr -d ' kB')
MEMORY_INFOS=$(cat /proc/meminfo)
SOURCE_TOTAL=$(echo "${MEMORY_INFOS}" | grep -i "${SOURCE}total" | awk -F ':' '{print $2}' | tr -d ' kB')

if [[ "${SOURCE_TOTAL}" -le 0 ]]; then
  exit
fi

if [[ "${SOURCE}" = "mem" ]]; then
    SOURCE_FREE_KEY="available"
elif [[ "${SOURCE}" = "swap" ]]; then
    SOURCE_FREE_KEY="free"
fi

SOURCE_FREE=$(echo "${MEMORY_INFOS}" | grep -i "${SOURCE}${SOURCE_FREE_KEY}" | awk -F ':' '{print $2}' | tr -d ' kB')
SOURCE_USED=$(echo "scale=0; ${SOURCE_TOTAL}-${SOURCE_FREE}" | bc -l)
SOURCE_PERC=$(echo "scale=1; (${SOURCE_USED}*100)/${SOURCE_TOTAL}" | bc -l)

if [[ "${DISPLAY}" = "free" ]]; then
  MEMINFO="${SOURCE_FREE}"
elif [[ "${DISPLAY}" = "used" ]]; then
  MEMINFO="${SOURCE_USED}"
elif [[ "${DISPLAY}" = "total" ]]; then
  MEMINFO="${SOURCE_TOTAL}"
elif [[ "${DISPLAY}" = "perc" ]]; then
  MEMINFO="${SOURCE_PERC}%"
elif [[ "${DISPLAY}" = "custom" ]]; then
    MEMINFO="P:${SOURCE_PERC}% F:$(dataUnitConverter ${SOURCE_FREE}) T:$(dataUnitConverter ${SOURCE_TOTAL})"
fi

color="#FFFFFF"
if [ $(echo "$SOURCE_PERC<50"|bc) -eq 1 ]; then
    color="#00FF00" ## green
elif [ $(echo "$SOURCE_PERC<75"|bc) -eq 1 ]; then
    color="#FFFF00" ## yello
elif [ $(echo "$SOURCE_PERC<95"|bc) -eq 1 ]; then
    color="#FF0000" ## red
else
	color="##A020F0" ## purple
fi


#if [[ "${DISPLAY}" != "perc" ]]; then
if [[ "${DISPLAY}" != "perc" && "${DISPLAY}" != "custom" ]]; then
  # Convert KB meminfo to bytes
#  MEMINFO=$(echo "${MEMINFO}*${ONE_KB}" | bc -l)
#
#  if [[ "${MEMINFO}" -ge "${ONE_TB}" ]]; then
#    MEMINFO=$(echo "scale=3;${MEMINFO}/${ONE_TB}" | bc -l)"tb"
#  elif [[ "${MEMINFO}" -ge "${ONE_GB}" ]]; then
#    MEMINFO=$(echo "scale=2;${MEMINFO}/${ONE_GB}" | bc -l)"gb"
#  elif [[ "${MEMINFO}" -ge "${ONE_MB}" ]]; then
#    MEMINFO=$(echo "scale=1;${MEMINFO}/${ONE_MB}" | bc -l)"mb"
#  else
#    MEMINFO=$(echo "scale=0;${MEMINFO}/${ONE_KB}" | bc -l)"kb"
#  fi
    #dataUnitConverter ${MEMINFO}
    MEMINFO=$(dataUnitConverter ${MEMINFO})
fi

#echo "${MEMINFO}"
#echo "${MEMINFO}"
#echo ""
echo "<span color='$color'>${MEMINFO}</span>"
echo "<span color='$color'>${MEMINFO}</span>"
echo ""

if [[ "${SOURCE_PERC}" -gt "${URGENT_VALUE}" ]]; then
  exit 33
fi
